.note {
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  padding: 2rem 0 0;
  width: 100%;
  border: 1px solid $bordergray;
  border-radius: 0.5rem;
  transition: opacity $t, transform $t, background-color $t;

  @include desktop {
    &:hover {
      .note__remove {
        opacity: 1;
      }

      .note__actions {
        opacity: 1;
        pointer-events: auto;
      }
    }
  }

  &.isFocused {
    .note__actions {
      opacity: 1;
      pointer-events: auto;
    }
  }

  &__actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding: 2rem;
    opacity: 0;
    pointer-events: none;
    transition: opacity $t;
  }

  &__title-wrapper {
    position: relative;

    @include desktop {
      &:hover {
        .note__row-remove {
          opacity: 1;
        }
      }
    }
  }

  &__title-button {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    color: $lightgray2;
    background-color: transparent;
    cursor: pointer;
    pointer-events: auto;
    transition: background-color $t, opacity $t;

    &:active {
      background-color: $bordergray;
    }

    @include desktop {
      &:hover {
        background-color: $bordergray;
      }
    }
  }

  // &__content-inner {
  //   overflow: hidden;
  //   max-height: 20rem;
  // }
  //
  // &__content-wrapper {
  // }

  &__backgrounds-wrapper {
    position: relative;
  }

  &__backgrounds-show {
    position: absolute;
    top: calc(50% - 1.25rem);
    right: 0;
    width: 2.5rem;
    height: 2.5rem;
    padding: 0.5rem;
    border-radius: 50%;
    color: $lightgray2;
    background-color: transparent;
    cursor: pointer;
    transition: background-color $t, opacity 0.2s 0.2s $easeOutCubic;

    &:active {
      background-color: $bordergray;
    }

    @include desktop {
      &:hover {
        background-color: $bordergray;
      }
    }
  }

  &__backgrounds-list {
    display: flex;
    align-items: center;
    pointer-events: none;

    &.isOpen {
      pointer-events: auto;

      .note__background {
        opacity: 1;
        transform: translateY(0.5rem);
        transition: 0.4s $easeOutCubic;
      }
    }
  }

  &__background {
    position: relative;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background-color: $white;
    border: 1px solid $bordergray;
    cursor: pointer;

    opacity: 0;
    transform: translate3d(-1rem, 0, 0);

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: 50%;
      background: $black;
      opacity: 0;
      transition: opacity $t;
    }

    &:active {
      &::before {
        opacity: 0.1;
      }
    }

    @include desktop {
      &:hover {
        &::before {
          opacity: 0.1;
        }
      }
    }

    & + & {
      margin-left: 0.5rem;
    }
  }

  &__title {
    padding: 0 4rem 1rem 2rem;
    font-size: 1.6rem;

    & + .note__row-remove {
      top: 0.25rem;
    }

    &:empty:not(:focus):before {
      content: attr(data-placeholder);
      color: $lightgray2;
      opacity: .75;
      pointer-events: none;
    }

    &:focus {
      + .note__row-remove {
        opacity: 1;
      }
    }
  }

  &__row {
    position: relative;
    padding: 0.6rem 5rem;
    font-size: 1.4rem;
    line-height: 1.25;
    text-decoration: line-through;
    text-decoration-color: transparent;
    transition: text-decoration $t, color $t;

    @include desktop {
      &:hover {
        .note__row-remove {
          opacity: 1;
        }
      }
    }

    &.isChecked {
      color: $lightgray2;
      text-decoration-color: $lightgray2;

      .note__row-label {
        border-color: rgba($lightgray2, .35);

        svg {
          position: absolute;
          top: calc(50% - 0.65rem);
          left: calc(50% - 0.65rem);
          width: 1.3rem;
          height: 1.3rem;
          opacity: 1;
        }
      }
    }

    &--add {
      color: $lightgray2;
      cursor: pointer;
      transition: opacity $t;

      @include desktop {
        opacity: 0.75;

        &:hover {
          opacity: 1;
        }
      }

      .note__row-label {
        border: none;

        svg {
          opacity: 1;
        }
      }
    }
  }

  &__row-label {
    position: absolute;
    top: 0.7rem;
    left: 2rem;
    width: 1.5rem;
    height: 1.5rem;
    border: 2px solid $gray;
    border-radius: 3px;
    color: $black;
    cursor: pointer;
    transition: border-color $t;
    z-index: 1;

    &:active {
      border-color: $black;
    }

    .isChecked & {
      &:active {
        border-color: $black;
      }
    }

    @include desktop {
      .isChecked & {
        &:hover {
          border-color: $black;
        }
      }

      &:hover {
        border-color: $black;
      }
    }

    svg {
      opacity: 0;
      transition: opacity $t;
    }
  }

  &__row-text {
    white-space: pre-wrap;

    &:focus {
      + .note__row-remove {
        opacity: 1;
      }
    }
  }

  &__row-remove {
    position: absolute;
    top: 0.7rem;
    right: 2rem;
    width: 1.7rem;
    height: 1.7rem;
    cursor: pointer;
    color: $gray;
    opacity: 0;
    transition: opacity $t, color $t;
    z-index: 1;

    @include desktop {
      &:hover {
        color: $black;
      }
    }

    svg {
      width: 100%;
      height: 100%;
    }
  }

  &__remove {
    position: absolute;
    top: -1rem;
    right: -1rem;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background: $gray;
    color: $white;
    cursor: pointer;
    z-index: 1;
    transition: opacity $t, background-color $t, color $t;

    &.isTrash {
      transform: rotate(45deg);
    }

    &:active {
      background-color: $black;
    }

    @include desktop {
      opacity: 0;
      &:hover {
        background-color: $black;
      }
    }
    @include mobile {
      width: 2.5rem;
      height: 2.5rem;
    }

    svg {
      width: 1.8rem;
      height: 1.8rem;
    }
  }
}

.isHidden {
  opacity: 0;
  pointer-events: none;
  transition: opacity $t;
}

.isCyan {
  background-color: $cyan;
}

.isYellow {
  background-color: $yellow;
}

.isGreen {
  background-color: $green;
}

.isPink {
  background-color: $pink;
}